//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BIPIT_front.ServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceRef.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Books", ReplyAction="http://tempuri.org/IService/BooksResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        string[][] Books();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Books", ReplyAction="http://tempuri.org/IService/BooksResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<string[][]> BooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Users", ReplyAction="http://tempuri.org/IService/UsersResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        string[][] Users();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Users", ReplyAction="http://tempuri.org/IService/UsersResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<string[][]> UsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Get_Data", ReplyAction="http://tempuri.org/IService/Get_DataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        string[][] Get_Data();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Get_Data", ReplyAction="http://tempuri.org/IService/Get_DataResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<string[][]> Get_DataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Add_Rec", ReplyAction="http://tempuri.org/IService/Add_RecResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        bool Add_Rec(int id_b, int id_u, string dateFrom, string dateTo, string dateFact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Add_Rec", ReplyAction="http://tempuri.org/IService/Add_RecResponse")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="Data")]
        System.Threading.Tasks.Task<bool> Add_RecAsync(int id_b, int id_u, string dateFrom, string dateTo, string dateFact);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : BIPIT_front.ServiceRef.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<BIPIT_front.ServiceRef.IService>, BIPIT_front.ServiceRef.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string[][] Books() {
            return base.Channel.Books();
        }
        
        public System.Threading.Tasks.Task<string[][]> BooksAsync() {
            return base.Channel.BooksAsync();
        }
        
        public string[][] Users() {
            return base.Channel.Users();
        }
        
        public System.Threading.Tasks.Task<string[][]> UsersAsync() {
            return base.Channel.UsersAsync();
        }
        
        public string[][] Get_Data() {
            return base.Channel.Get_Data();
        }
        
        public System.Threading.Tasks.Task<string[][]> Get_DataAsync() {
            return base.Channel.Get_DataAsync();
        }
        
        public bool Add_Rec(int id_b, int id_u, string dateFrom, string dateTo, string dateFact) {
            return base.Channel.Add_Rec(id_b, id_u, dateFrom, dateTo, dateFact);
        }
        
        public System.Threading.Tasks.Task<bool> Add_RecAsync(int id_b, int id_u, string dateFrom, string dateTo, string dateFact) {
            return base.Channel.Add_RecAsync(id_b, id_u, dateFrom, dateTo, dateFact);
        }
    }
}
